{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar global_1 = require(\"global\");\n\nvar channels_1 = __importDefault(require(\"@storybook/channels\"));\n\nvar client_logger_1 = require(\"@storybook/client-logger\");\n\nvar telejson_1 = require(\"telejson\");\n\nexports.KEY = 'storybook-channel'; // TODO: we should export a method for opening child windows here and keep track of em.\n// that way we can send postMessage to child windows as well, not just iframe\n// https://stackoverflow.com/questions/6340160/how-to-get-the-references-of-all-already-opened-child-windows\n\nvar PostmsgTransport =\n/** @class */\nfunction () {\n  function PostmsgTransport(config) {\n    var _this = this;\n\n    this.config = config;\n    this.buffer = [];\n    this.handler = null;\n    global_1.window.addEventListener('message', this.handleEvent.bind(this), false);\n    global_1.document.addEventListener('DOMContentLoaded', function () {\n      return _this.flush();\n    }); // Check whether the config.page parameter has a valid value\n\n    if (config.page !== 'manager' && config.page !== 'preview') {\n      throw new Error(\"postmsg-channel: \\\"config.page\\\" cannot be \\\"\" + config.page + \"\\\"\");\n    }\n  }\n\n  PostmsgTransport.prototype.setHandler = function (handler) {\n    this.handler = handler;\n  };\n  /**\n   * Sends `event` to the associated window. If the window does not yet exist\n   * the event will be stored in a buffer and sent when the window exists.\n   * @param event\n   */\n\n\n  PostmsgTransport.prototype.send = function (event) {\n    var _this = this;\n\n    var iframeWindow = this.getWindow();\n\n    if (!iframeWindow) {\n      return new Promise(function (resolve, reject) {\n        _this.buffer.push({\n          event: event,\n          resolve: resolve,\n          reject: reject\n        });\n      });\n    }\n\n    var data = telejson_1.stringify({\n      key: exports.KEY,\n      event: event\n    }, {\n      maxDepth: 15\n    }); // TODO: investigate http://blog.teamtreehouse.com/cross-domain-messaging-with-postmessage\n    // might replace '*' with document.location ?\n\n    iframeWindow.postMessage(data, '*');\n    return Promise.resolve(null);\n  };\n\n  PostmsgTransport.prototype.flush = function () {\n    var _this = this;\n\n    var buffer = this.buffer;\n    this.buffer = [];\n    buffer.forEach(function (item) {\n      _this.send(item.event).then(item.resolve).catch(item.reject);\n    });\n  };\n\n  PostmsgTransport.prototype.getWindow = function () {\n    if (this.config.page === 'manager') {\n      // FIXME this is a really bad idea! use a better way to do this.\n      // This finds the storybook preview iframe to send messages to.\n      var iframe = global_1.document.getElementById('storybook-preview-iframe');\n\n      if (!iframe) {\n        return null;\n      }\n\n      return iframe.contentWindow;\n    }\n\n    return global_1.window.parent;\n  };\n\n  PostmsgTransport.prototype.handleEvent = function (rawEvent) {\n    try {\n      var data = rawEvent.data;\n\n      var _a = typeof data === 'string' && telejson_1.isJSON(data) ? telejson_1.parse(data) : data,\n          key = _a.key,\n          event_1 = _a.event;\n\n      if (key === exports.KEY) {\n        client_logger_1.logger.debug.apply(client_logger_1.logger, [\"message arrived at \" + this.config.page, event_1.type].concat(event_1.args));\n        this.handler(event_1);\n      }\n    } catch (error) {\n      client_logger_1.logger.error(error); // debugger;\n    }\n  };\n\n  return PostmsgTransport;\n}();\n\nexports.PostmsgTransport = PostmsgTransport;\n/**\n * Creates a channel which communicates with an iframe or child window.\n */\n\nfunction createChannel(_a) {\n  var page = _a.page;\n  var transport = new PostmsgTransport({\n    page: page\n  });\n  return new channels_1.default({\n    transport: transport\n  });\n}\n\nexports.default = createChannel;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","global_1","require","channels_1","client_logger_1","telejson_1","KEY","PostmsgTransport","config","_this","buffer","handler","window","addEventListener","handleEvent","bind","document","flush","page","Error","prototype","setHandler","send","event","iframeWindow","getWindow","Promise","resolve","reject","push","data","stringify","key","maxDepth","postMessage","forEach","item","then","catch","iframe","getElementById","contentWindow","parent","rawEvent","_a","isJSON","parse","event_1","logger","debug","apply","type","concat","args","error","createChannel","transport","default"],"sources":["/Users/megwilken/lighthouse/scheduler2/node_modules/@storybook/channel-postmessage/dist/index.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar global_1 = require(\"global\");\nvar channels_1 = __importDefault(require(\"@storybook/channels\"));\nvar client_logger_1 = require(\"@storybook/client-logger\");\nvar telejson_1 = require(\"telejson\");\nexports.KEY = 'storybook-channel';\n// TODO: we should export a method for opening child windows here and keep track of em.\n// that way we can send postMessage to child windows as well, not just iframe\n// https://stackoverflow.com/questions/6340160/how-to-get-the-references-of-all-already-opened-child-windows\nvar PostmsgTransport = /** @class */ (function () {\n    function PostmsgTransport(config) {\n        var _this = this;\n        this.config = config;\n        this.buffer = [];\n        this.handler = null;\n        global_1.window.addEventListener('message', this.handleEvent.bind(this), false);\n        global_1.document.addEventListener('DOMContentLoaded', function () { return _this.flush(); });\n        // Check whether the config.page parameter has a valid value\n        if (config.page !== 'manager' && config.page !== 'preview') {\n            throw new Error(\"postmsg-channel: \\\"config.page\\\" cannot be \\\"\" + config.page + \"\\\"\");\n        }\n    }\n    PostmsgTransport.prototype.setHandler = function (handler) {\n        this.handler = handler;\n    };\n    /**\n     * Sends `event` to the associated window. If the window does not yet exist\n     * the event will be stored in a buffer and sent when the window exists.\n     * @param event\n     */\n    PostmsgTransport.prototype.send = function (event) {\n        var _this = this;\n        var iframeWindow = this.getWindow();\n        if (!iframeWindow) {\n            return new Promise(function (resolve, reject) {\n                _this.buffer.push({ event: event, resolve: resolve, reject: reject });\n            });\n        }\n        var data = telejson_1.stringify({ key: exports.KEY, event: event }, { maxDepth: 15 });\n        // TODO: investigate http://blog.teamtreehouse.com/cross-domain-messaging-with-postmessage\n        // might replace '*' with document.location ?\n        iframeWindow.postMessage(data, '*');\n        return Promise.resolve(null);\n    };\n    PostmsgTransport.prototype.flush = function () {\n        var _this = this;\n        var buffer = this.buffer;\n        this.buffer = [];\n        buffer.forEach(function (item) {\n            _this.send(item.event)\n                .then(item.resolve)\n                .catch(item.reject);\n        });\n    };\n    PostmsgTransport.prototype.getWindow = function () {\n        if (this.config.page === 'manager') {\n            // FIXME this is a really bad idea! use a better way to do this.\n            // This finds the storybook preview iframe to send messages to.\n            var iframe = global_1.document.getElementById('storybook-preview-iframe');\n            if (!iframe) {\n                return null;\n            }\n            return iframe.contentWindow;\n        }\n        return global_1.window.parent;\n    };\n    PostmsgTransport.prototype.handleEvent = function (rawEvent) {\n        try {\n            var data = rawEvent.data;\n            var _a = typeof data === 'string' && telejson_1.isJSON(data) ? telejson_1.parse(data) : data, key = _a.key, event_1 = _a.event;\n            if (key === exports.KEY) {\n                client_logger_1.logger.debug.apply(client_logger_1.logger, [\"message arrived at \" + this.config.page, event_1.type].concat(event_1.args));\n                this.handler(event_1);\n            }\n        }\n        catch (error) {\n            client_logger_1.logger.error(error);\n            // debugger;\n        }\n    };\n    return PostmsgTransport;\n}());\nexports.PostmsgTransport = PostmsgTransport;\n/**\n * Creates a channel which communicates with an iframe or child window.\n */\nfunction createChannel(_a) {\n    var page = _a.page;\n    var transport = new PostmsgTransport({ page: page });\n    return new channels_1.default({ transport: transport });\n}\nexports.default = createChannel;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}