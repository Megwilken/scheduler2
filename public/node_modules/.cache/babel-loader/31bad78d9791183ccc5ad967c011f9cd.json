{"ast":null,"code":"export function getAppointmentsForDay(state, day) {\n  const dayObj = state.days.find(dayObj => dayObj.name === day);\n\n  if (!dayObj) {\n    return [];\n  }\n\n  const appointments = dayObj.appointments.map(id => state.appointments[id]);\n  return appointments;\n}\nexport function getInterviewersForDay(state, name) {\n  const dayObj = state.days.find(dayObj => dayObj.name === name);\n\n  if (!dayObj || !Array.isArray(dayObj.interviewers)) {\n    return [];\n  }\n\n  const interviewersFromDays = dayObj.interviewers;\n  let interviewObj = [];\n\n  for (let interviewer of interviewersFromDays) {\n    interviewObj.push(state.interviewers[interviewer]);\n  }\n\n  return interviewObj;\n}\nexport function getInterview(state, interview) {\n  if (!interview) {\n    return null;\n  }\n\n  const interviewObj = {\n    student: interview.student,\n    interviewer: state.interviewers[interview.interviewer]\n  };\n  return interviewObj;\n}","map":{"version":3,"names":["getAppointmentsForDay","state","day","dayObj","days","find","name","appointments","map","id","getInterviewersForDay","Array","isArray","interviewers","interviewersFromDays","interviewObj","interviewer","push","getInterview","interview","student"],"sources":["/Users/megwilken/lighthouse/scheduler2/src/helpers/selectors.js"],"sourcesContent":["export function getAppointmentsForDay(state, day) {\n  const dayObj = state.days.find((dayObj) => dayObj.name === day);\n  if (!dayObj) {\n    return [];\n  }\n  const appointments = dayObj.appointments.map((id) => state.appointments[id]);\n  return appointments;\n}\n\nexport function getInterviewersForDay(state, name) {\n  const dayObj = state.days.find((dayObj) => dayObj.name === name);\n  if (!dayObj || !Array.isArray(dayObj.interviewers)) {\n    return [];\n  }\n  const interviewersFromDays = dayObj.interviewers;\n  let interviewObj = [];\n\n  for (let interviewer of interviewersFromDays) {\n    interviewObj.push(state.interviewers[interviewer]);\n  }\n  return interviewObj;\n}\n\nexport function getInterview(state, interview) {\n  if (!interview) {\n    return null;\n  }\n  const interviewObj = {\n    student: interview.student,\n    interviewer: state.interviewers[interview.interviewer],\n  };\n  return interviewObj;\n}\n\n"],"mappings":"AAAA,OAAO,SAASA,qBAAT,CAA+BC,KAA/B,EAAsCC,GAAtC,EAA2C;EAChD,MAAMC,MAAM,GAAGF,KAAK,CAACG,IAAN,CAAWC,IAAX,CAAiBF,MAAD,IAAYA,MAAM,CAACG,IAAP,KAAgBJ,GAA5C,CAAf;;EACA,IAAI,CAACC,MAAL,EAAa;IACX,OAAO,EAAP;EACD;;EACD,MAAMI,YAAY,GAAGJ,MAAM,CAACI,YAAP,CAAoBC,GAApB,CAAyBC,EAAD,IAAQR,KAAK,CAACM,YAAN,CAAmBE,EAAnB,CAAhC,CAArB;EACA,OAAOF,YAAP;AACD;AAED,OAAO,SAASG,qBAAT,CAA+BT,KAA/B,EAAsCK,IAAtC,EAA4C;EACjD,MAAMH,MAAM,GAAGF,KAAK,CAACG,IAAN,CAAWC,IAAX,CAAiBF,MAAD,IAAYA,MAAM,CAACG,IAAP,KAAgBA,IAA5C,CAAf;;EACA,IAAI,CAACH,MAAD,IAAW,CAACQ,KAAK,CAACC,OAAN,CAAcT,MAAM,CAACU,YAArB,CAAhB,EAAoD;IAClD,OAAO,EAAP;EACD;;EACD,MAAMC,oBAAoB,GAAGX,MAAM,CAACU,YAApC;EACA,IAAIE,YAAY,GAAG,EAAnB;;EAEA,KAAK,IAAIC,WAAT,IAAwBF,oBAAxB,EAA8C;IAC5CC,YAAY,CAACE,IAAb,CAAkBhB,KAAK,CAACY,YAAN,CAAmBG,WAAnB,CAAlB;EACD;;EACD,OAAOD,YAAP;AACD;AAED,OAAO,SAASG,YAAT,CAAsBjB,KAAtB,EAA6BkB,SAA7B,EAAwC;EAC7C,IAAI,CAACA,SAAL,EAAgB;IACd,OAAO,IAAP;EACD;;EACD,MAAMJ,YAAY,GAAG;IACnBK,OAAO,EAAED,SAAS,CAACC,OADA;IAEnBJ,WAAW,EAAEf,KAAK,CAACY,YAAN,CAAmBM,SAAS,CAACH,WAA7B;EAFM,CAArB;EAIA,OAAOD,YAAP;AACD"},"metadata":{},"sourceType":"module"}